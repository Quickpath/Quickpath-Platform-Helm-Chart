---
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.dockerhub.secretname}}
  namespace: {{.Values.kubernetes.platformnamespace}}
type: kubernetes.io/dockerconfigjson
data:
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#registry-secret-existing-credentials
  .dockerconfigjson: {{.Values.dockerhub.dockerfilejson}}

---
apiVersion: v1
kind: Secret
metadata:
  name: app
  namespace: {{.Values.kubernetes.platformnamespace}}
data:
  QP_APP_SECRET_KEY: {{.Values.appdesignconfig.sessionsecret}}
  {{- if eq .Values.newrelic.enabled "true" }}
  NEWRELIC_LICENSE_KEY: {{.Values.newrelic.licensekey}}
  {{ end }}
  {{-  if eq .Values.secretsmanager.managertype "aws" }}
  {{-  if eq .Values.secretsmanager.authtype "accesskey" }}
  SECRETS_AWS_ACCESS_KEY_ID: {{.Values.secretsmanager.accesskeyid}}
  SECRET_AWS_SECRET_ACCESS_KEY: {{.Values.secretsmanager.secretaccesskey}}
  {{ end}}
  {{ end}}
  {{-  if eq .Values.secretsmanager.managertype "vault" }}
  QP_SECRETS_USERNAME: {{.Values.secretsmanager.vaultusername}}
  QP_SECRETS_PASSWORD: {{.Values.secretsmanager.vaultpassword}}
  {{ end}}
  {{-  if eq .Values.secretsmanager.managertype "azure" }}
    {{-  if eq .Values.secretsmanager.authtype "accesskey" }}
  SECETS_AZURE_TENANT: {{.Values.secretsmanager.azuretenant}}
  SECETS_AZURE_CLIENT_ID: {{.Values.secretsmanager.azureclientid}}
  SECRETS_AZURE_CLIENT_SECRET: {{.Values.secretsmanager.azureclientsecret}}
    {{ end}}
  {{ end}}
  {{-  if eq .Values.secretsmanager.managertype "google" }}
  SECRETS_GOOGLE_SERVICE_ACCOUNT_JSON: {{.Values.secretsmanager.googleserviceaccountjson}}
  {{ end}}
---
apiVersion: v1
kind: Secret
metadata:
  name: app-mysql
  namespace: {{.Values.kubernetes.platformnamespace}}
data:
  root-password: {{.Values.mysql.rootpassword}}
  QP_APP_DB_NAME: {{.Values.mysql.databasename}}
  database-name: {{.Values.mysql.databasename}}
  QP_APP_DB_USERNAME: {{.Values.mysql.databaseuser}}
  database-user: {{.Values.mysql.databaseuser}}
  QP_APP_DB_PASSWORD: {{.Values.mysql.databasepassword}}
  database-password: {{.Values.mysql.databasepassword}}

---
apiVersion: v1
kind: Secret
metadata:
  name: app-redis
  namespace: {{.Values.kubernetes.platformnamespace}}
{{- if .Values.redis.password }}
data:
  REDIS_PASSWORD: {{.Values.redis.password}}
{{ end }}

{{- if .Values.keycloak }}
---
kind: Secret
apiVersion: v1
metadata:
  name: keycloak
  namespace: {{.Values.kubernetes.platformnamespace}}
data:
  QP_KEYCLOAK_SECRET: {{.Values.keycloak.clientsecret}}
  QP_KEYCLOAK_CLIENT_ID: {{.Values.keycloak.clientid}}
  QP_KEYCLOAK_REALM_NAME: {{.Values.keycloak.realm}}
  QP_KEYCLOAK_ADMIN_USERNAME: {{.Values.keycloak.adminusername}}
  QP_KEYCLOAK_ADMIN_PASSWORD: {{.Values.keycloak.adminpassword}}
{{ end }}

{{- if .Values.msal }}
---
kind: Secret
apiVersion: v1
metadata:
  name: msal
  namespace: {{.Values.kubernetes.platformnamespace}}
data:
  MSAL_CLIENT_SECRET: {{.Values.msal.clientsecret}}
{{ end }}